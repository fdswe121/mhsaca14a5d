{
  "name": "decrypt_content",
  "version": "1.0.0",
  "sha256": "706478d9a34cef77b40ede78e5280fd99d6dfe713da6542c9e3d1cf9df3e847d",
  "code": "def decrypt_content(album_asin, pssh: str = None, dmls_data=None):\n    if dmls_data is None:\n        std_logging.error(\"解密需要 DRM 数据.\");\n        return \"dmls_data is missing.\"\n\n    try:\n        pssh = PSSH(pssh)\n        device_files = glob.glob(f'{main_directory}/device/*.wvd')\n        if not device_files:\n            std_logging.error(\"未找到设备文件.\")\n            return \"未找到设备文件.\"\n        device = Device.load(device_files[0])\n        cdm = Cdm.from_device(device)\n        session_id = cdm.open()\n        challenge = cdm.get_license_challenge(session_id, pssh)\n        challenge_b64 = base64.b64encode(challenge).decode()\n        data = get_data(album_asin)\n        data['licenseChallenge'] = challenge_b64\n        r = requests.post('https://music.amazon.co.jp/FE/api/dmls/', cookies=dmls_data.get('cookies', {}), headers=dmls_data.get('headers', {}), json=data, timeout=30)\n        if r.status_code != 200:\n            std_logging.error(\"无法获得许可证.\")\n            return r.content\n        license = r.json()['license']\n        cdm.parse_license(session_id, license)\n        keys = []\n        for k in cdm.get_keys(session_id):\n            if k.type != 'SIGNING':\n                keys.append(f\"{k.kid.hex}:{k.key.hex()}\")\n        cdm.close(session_id)\n        return \"\\n\".join(keys)\n    except Exception:\n        std_logging.error(\"解密时出现异常\")\n        return None\n"
}